name: Develop Build
on:
  push:
    branches:
      - develop
    paths-ignore:
      - '**/README*'
      - '**.md'
      - .gitignore
      - docs/**
      - algvalidation/**
  repository_dispatch:
    types: manual-run

jobs:
  build-tag:
    runs-on: ubuntu-latest
    name: Generate Tag
    outputs:
      latest-tag: ${{ steps.auto-tag.outputs.last-build-number }}
      commit-tag: ${{ steps.auto-tag.outputs.new-build-number }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags - useful for tagging.
          fetch-depth: '0'

      - id: auto-tag
        uses: ./.github/actions/autotag
        with:
          branch: develop

      - id: finalize-tag
        uses: ./.github/actions/pushtag
        with:
          tag-to-push: ${{ steps.auto-tag.outputs.new-build-number }}

      - name: Clean Tagging Workspace
        if: ${{ always() }}
        run: |
          echo "cleaning up $GITHUB_WORKSPACE"
          sudo rm -rf "$GITHUB_WORKSPACE"/*
          sudo rm -rf "$GITHUB_WORKSPACE/.git"

  build:
    needs: build-tag
    runs-on: [self-hosted, eks-runner-x-large]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags - useful for tagging.
          fetch-depth: '0'

      - name: Login to Docker Registry
        uses: azure/docker-login@v1
        with:
          login-server: docker.bin.is.idexx.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run Build in Docker Container
        env:
          CI_ENABLED: true
          VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
        run: |
            CI_ENABLED=true TAG=${{needs.build-tag.outputs.commit-tag}} BRANCH=develop make publish

      - name: The Build Has Succeeded!
        if: ${{ success() }}
        run: |
          echo "Build Successful, Notifying Slack!"
          BRANCH="develop" STATUS="success" PREVIOUS_COMMIT=${{ needs.build-tag.outputs.latest-tag }} \
            COMMIT_TAG=${{ needs.build-tag.outputs.commit-tag }} ./make-scripts/notify-slack.sh
          echo "Got job status: ${{ needs.build-tag.status }}"
          POLARIS_ACCESS_TOKEN=${{secrets.POLARIS_ACCESS_TOKEN}} \
            POLARIS_SERVER_URL=${{secrets.POLARIS_SERVER_URL}} \
            make run_coverity
        shell: bash

      - name: The Build Has Failed!
        if: ${{ failure() }}
        run: |
          echo "Build Failed, Notifying Slack!"
          BRANCH="develop" STATUS="failure" PREVIOUS_COMMIT=${{ needs.build-tag.outputs.latest-tag }} \
            COMMIT_TAG=${{ needs.build-tag.outputs.commit-tag }} ./make-scripts/notify-slack.sh
        shell: bash

      - name: Cleanup Tag on Cancelled Workflow
        if: ${{ cancelled() }}
        run: |
          git push --delete origin ${{ needs.build-tag.outputs.commit-tag }}

      - name: Clean Workspace
        if: always()
        run: |
          make ci_clean || echo "Unable to run ci_clean, working folder likely missing"
          sudo rm -rf "$GITHUB_WORKSPACE"/*
          sudo rm -rf "$GITHUB_WORKSPACE/.gradle"
          sudo rm -rf "$GITHUB_WORKSPACE/.git"
          sudo rm -rf "$GITHUB_WORKSPACE/.synopsys"
